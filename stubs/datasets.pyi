"""
Type stubs for datasets library.
"""

from typing import Any, Dict, Iterator, List, Optional, Union

class Dataset:
    """Stub for Dataset."""
    def __init__(self, *args, **kwargs): ...
    def __len__(self) -> int: ...
    def __getitem__(self, key: Union[int, str]) -> Any: ...
    def __iter__(self) -> Iterator[Any]: ...
    def map(self, function, **kwargs) -> 'Dataset': ...
    def filter(self, function, **kwargs) -> 'Dataset': ...
    def select(self, indices: List[int]) -> 'Dataset': ...
    def shuffle(self, seed: Optional[int] = None) -> 'Dataset': ...
    def train_test_split(self, test_size: float, **kwargs) -> Dict[str, 'Dataset']: ...
    
    @property
    def column_names(self) -> List[str]: ...
    @property
    def features(self) -> Any: ...

class DatasetDict:
    """Stub for DatasetDict."""
    def __init__(self, *args, **kwargs): ...
    def __getitem__(self, key: str) -> Dataset: ...
    def __contains__(self, key: str) -> bool: ...
    def keys(self) -> List[str]: ...
    def items(self) -> Iterator[tuple[str, Dataset]]: ...
    def values(self) -> Iterator[Dataset]: ...

def load_dataset(
    path: str,
    name: Optional[str] = None,
    split: Optional[Union[str, List[str]]] = None,
    **kwargs
) -> Union[Dataset, DatasetDict]: ...
