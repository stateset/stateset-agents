[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "stateset-agents"
version = "0.3.4"
description = "A comprehensive framework for training multi-turn AI agents using Group Relative Policy Optimization (GRPO)"
readme = "README.md"
license = {text = "Business Source License 1.1"}
requires-python = ">=3.8"
authors = [
    {name = "StateSet Team", email = "team@stateset.ai"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: Other/Proprietary License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "torch>=2.0.0",
    "transformers>=4.30.0,<4.45.0",
    "datasets>=2.0.0",
    "scikit-learn>=1.3.0,<1.6.0",
    "numpy>=1.21.0,<2.0.0",
    "peft>=0.4.0",
    "trl>=0.7.0",
    "accelerate>=0.20.0",
    "wandb>=0.15.0",
    "tqdm>=4.65.0",
    "pydantic>=2.0.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
    "aiohttp>=3.8.0",
    "psutil>=5.9.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "ruff>=0.1.0",
"bandit>=1.7.0",
"safety>=2.0.0",
"semgrep>=1.0.0"
]
api = [
    "fastapi>=0.110.0",
    "uvicorn>=0.23.0",
]
examples = [
    "openai>=1.0.0",
    "anthropic>=0.5.0",
    "langchain>=0.1.0",
]
trl = [
    "trl>=0.7.0",
    "bitsandbytes>=0.41.0",
]

[project.urls]
Homepage = "https://github.com/stateset/stateset-agents"
Repository = "https://github.com/stateset/stateset-agents"
Documentation = "https://stateset-agents.readthedocs.io/"
Issues = "https://github.com/stateset/stateset-agents/issues"

[project.scripts]
stateset-agents = "stateset_agents.cli:run"

# Setuptools package discovery
[tool.setuptools.packages.find]
include = [
    "stateset_agents*",
    "core*",
    "training*",
    "utils*",
    "rewards*",
    "api*",
    "grpo_agent_framework*",
    "environments*",
]
exclude = [
    "tests*",
    "docs*",
    "benchmarks*",
    "scripts*",
    "htmlcov*",
    "dist*",
]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["stateset_agents", "grpo_agent_framework"]
known_third_party = ["torch", "transformers", "datasets", "numpy", "wandb"]

# mypy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
mypy_path = "stubs"

# Module-specific mypy settings
[[tool.mypy.overrides]]
module = [
    "torch.*",
    "transformers.*",
    "datasets.*",
    "wandb.*",
    "peft.*",
    "trl.*",
    "accelerate.*",
]
ignore_missing_imports = true

# pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=stateset_agents",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
    "gpu: Tests requiring GPU",
]
asyncio_mode = "auto"

# Coverage configuration
[tool.coverage.run]
source = ["stateset_agents", "grpo_agent_framework"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
]

# Ruff configuration (fast Python linter)
[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]  # assert false

[tool.ruff.isort]
known-first-party = ["stateset_agents", "grpo_agent_framework"]

 

[tool.setuptools.package-data]
stateset_agents = ["py.typed"]
